syntax = "proto3";
package fairyring.keyshare;

import "google/protobuf/duration.proto";
import "gogoproto/gogo.proto";
import "fairyring/common/shared_types.proto";

option go_package = "github.com/Fairblock/fairyring/x/keyshare/types";

message KeysharePacketData {
    oneof packet {
        NoData noData = 1;
        RequestAggrKeysharePacketData requestAggrKeysharePacket = 2;
        GetAggrKeysharePacketData     getAggrKeysharePacket     = 3;
        AggrKeyshareDataPacketData    aggrKeyshareDataPacket    = 4;
        CurrentKeysPacketData         currentKeysPacket         = 5;
    }
}

message NoData {
}


// RequestAggrKeysharePacketData defines a struct for the packet payload
message RequestAggrKeysharePacketData {
  string requester = 1;
  oneof id {
    string proposal_id = 2;
    string request_id = 3;
  }
  google.protobuf.Duration estimated_delay = 4 [(gogoproto.stdduration) = true];
}

// RequestAggrKeysharePacketAck defines a struct for the packet acknowledgment
message RequestAggrKeysharePacketAck {
    string identity = 1;
    string pubkey   = 2;
}

// GetAggrKeysharePacketData defines a struct for the packet payload
message GetAggrKeysharePacketData {
    string identity = 1;
}

// GetAggrKeysharePacketAck defines a struct for the packet acknowledgment
message GetAggrKeysharePacketAck {}

// AggrKeyshareDataPacketData defines a struct for the packet payload
message AggrKeyshareDataPacketData {
    string identity      = 1;
    string pubkey        = 2;
    string aggr_keyshare = 3;
    string aggr_height   = 4;
    string proposal_id   = 5; // used for private governance
    string request_id    = 6; // might be useful to destination chains to sort out the response
    uint64 retries       = 7;
}

// AggrKeyshareDataPacketAck defines a struct for the packet acknowledgment
message AggrKeyshareDataPacketAck {}

// CurrentKeysPacketData defines a struct for the packet payload
message CurrentKeysPacketData {
}

// CurrentKeysPacketAck defines a struct for the packet acknowledgment
message CurrentKeysPacketAck {
    fairyring.common.ActivePublicKey activeKey = 1;
    fairyring.common.QueuedPublicKey queuedKey = 2;
}