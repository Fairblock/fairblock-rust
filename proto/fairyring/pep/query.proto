syntax = "proto3";

package fairyring.pep;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "fairyring/pep/params.proto";
import "fairyring/pep/encrypted_tx.proto";
import "fairyring/pep/pep_nonce.proto";
import "fairyring/pep/aggregated_key_share.proto";
import "fairyring/common/shared_types.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Fairblock/fairyring/x/pep/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/fairyring/pep/params";
  
  }
  
  // Queries a EncryptedTx by index.
  rpc EncryptedTx (QueryGetEncryptedTxRequest) returns (QueryGetEncryptedTxResponse) {
    option (google.api.http).get = "/fairyring/pep/encrypted_tx/{targetHeight}/{index}";
  
  }
  
  // Queries a list of EncryptedTx items.
  rpc EncryptedTxAll (QueryAllEncryptedTxRequest) returns (QueryAllEncryptedTxResponse) {
    option (google.api.http).get = "/fairyring/pep/encrypted_tx";
  
  }
  
  // Queries a list of EncryptedTx items.
  rpc EncryptedTxAllFromHeight (QueryAllEncryptedTxFromHeightRequest) returns (QueryAllEncryptedTxFromHeightResponse) {
    option (google.api.http).get = "/fairyring/pep/encrypted_tx/{targetHeight}";
  
  }
  
  // Queries a list of LatestHeight items.
  rpc LatestHeight (QueryLatestHeightRequest) returns (QueryLatestHeightResponse) {
    option (google.api.http).get = "/fairyring/pep/latest_height";
  
  }
  
  // Queries a PepNonce by index.
  rpc PepNonce (QueryGetPepNonceRequest) returns (QueryGetPepNonceResponse) {
    option (google.api.http).get = "/fairyring/pep/pep_nonce/{address}";
  
  }
  
  // Queries a list of PepNonce items.
  rpc PepNonceAll (QueryAllPepNonceRequest) returns (QueryAllPepNonceResponse) {
    option (google.api.http).get = "/fairyring/pep/pep_nonce";
  
  }
  
  // Queries the public keys
  rpc PubKey         (QueryPubKeyRequest     ) returns (QueryPubKeyResponse     ) {
    option (google.api.http).get = "/fairyring/pep/pub_key";
  
  }
  rpc KeyshareReq    (QueryKeyshareRequest   ) returns (QueryKeyshareResponse   ) {
    option (google.api.http).get = "/fairyring/pep/keyshare/{req_id}";
  
  }
  rpc KeyshareReqAll (QueryAllKeyshareRequest) returns (QueryAllKeyshareResponse) {
    option (google.api.http).get = "/fairyring/pep/keyshare";
  
  }
  
  // Queries a list of ShowPrivateKeyshareReq items.
  rpc ShowPrivateKeyshareReq (QueryShowPrivateKeyshareReqRequest) returns (QueryShowPrivateKeyshareReqResponse) {
    option (google.api.http).get = "/Fairblock/fairyring/pep/show_private_keyshare_req/{reqId}";
  
  }
  
  // Queries a list of DecryptData items.
  rpc DecryptData (QueryDecryptDataRequest) returns (QueryDecryptDataResponse) {
    option (google.api.http).get = "/Fairblock/fairyring/pep/decrypt_data/{pubkey}/{aggr_keyshare}/{encrypted_data}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryKeyshareRequest {
  string req_id = 1;
}

message QueryKeyshareResponse {
  GenEncTxExecutionQueue keyshare = 1;
}

message QueryAllKeyshareRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllKeyshareResponse {
  repeated GenEncTxExecutionQueue                 keyshares  = 1;
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetEncryptedTxRequest {
  uint64 targetHeight = 1;
  uint64 index        = 2;
}

message QueryGetEncryptedTxResponse {
  EncryptedTx encryptedTx = 1 [(gogoproto.nullable) = false];
}

message QueryAllEncryptedTxRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEncryptedTxResponse {
  repeated EncryptedTxArray                       encryptedTxArray = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination       = 2;
}

message QueryAllEncryptedTxFromHeightRequest {
  uint64 targetHeight = 1;
}

message QueryAllEncryptedTxFromHeightResponse {
  EncryptedTxArray encryptedTxArray = 1 [(gogoproto.nullable) = false];
}

message QueryLatestHeightRequest {}

message QueryLatestHeightResponse {
  uint64 height = 1;
}

message QueryGetPepNonceRequest {
  string address = 1;
}

message QueryGetPepNonceResponse {
  PepNonce pepNonce = 1 [(gogoproto.nullable) = false];
}

message QueryAllPepNonceRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPepNonceResponse {
  repeated PepNonce                               pepNonce   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryPubKeyRequest {}

message QueryPubKeyResponse {
  fairyring.common.ActivePublicKey activePubKey = 1 [(gogoproto.nullable) = false];
  fairyring.common.QueuedPublicKey queuedPubKey = 2 [(gogoproto.nullable) = false];
}

message QueryShowPrivateKeyshareReqRequest {
  string reqId = 1;
}

message QueryShowPrivateKeyshareReqResponse {
  string creator = 1;
  string req_id = 2;
  string pubkey = 3;
  repeated fairyring.common.EncryptedKeyshare encrypted_keyshares = 5;
}

message QueryDecryptDataRequest {
  string pubkey = 1;
  string aggr_keyshare  = 2;
  string encrypted_data = 3;
}

message QueryDecryptDataResponse {
  string decrypted_data = 1;
}

