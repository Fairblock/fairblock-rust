syntax = "proto3";

package fairyring.keyshare;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "fairyring/keyshare/params.proto";
import "fairyring/keyshare/general_key_share.proto";
import "fairyring/keyshare/pub_key.proto";

option go_package = "github.com/Fairblock/fairyring/x/keyshare/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams             (MsgUpdateParams            ) returns (MsgUpdateParamsResponse            );
  rpc RegisterValidator (MsgRegisterValidator) returns (MsgRegisterValidatorResponse);
  rpc DeRegisterValidator (MsgDeRegisterValidator) returns (MsgDeRegisterValidatorResponse);
  rpc SendKeyshare      (MsgSendKeyshare     ) returns (MsgSendKeyshareResponse     );

  // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateLatestPubKey      (MsgCreateLatestPubKey     ) returns (MsgCreateLatestPubKeyResponse     );
  rpc OverrideLatestPubKey    (MsgOverrideLatestPubKey   ) returns (MsgOverrideLatestPubKeyResponse   );
  rpc CreateAuthorizedAddress (MsgCreateAuthorizedAddress) returns (MsgCreateAuthorizedAddressResponse);
  rpc UpdateAuthorizedAddress (MsgUpdateAuthorizedAddress) returns (MsgUpdateAuthorizedAddressResponse);
  rpc DeleteAuthorizedAddress (MsgDeleteAuthorizedAddress) returns (MsgDeleteAuthorizedAddressResponse);
  rpc CreateGeneralKeyShare   (MsgCreateGeneralKeyShare  ) returns (MsgCreateGeneralKeyShareResponse  );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                            "authority";
  option           (amino.name) = "fairyring/x/keyshare/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgRegisterValidator {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
}

message MsgRegisterValidatorResponse {
  string creator = 1;
}

message MsgDeRegisterValidator {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
}

message MsgDeRegisterValidatorResponse {
  string creator = 1;
}

message MsgSendKeyshare {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       = 1;
  string message       = 2;
  uint64 keyShareIndex = 3;
  uint64 blockHeight   = 4;
}

message MsgSendKeyshareResponse {
  string creator             = 1;
  string keyshare            = 2;
  uint64 keyshareIndex       = 3;
  uint64 blockHeight         = 4;
  uint64 receivedBlockHeight = 5;
  bool   success             = 6;
  string errorMessage        = 7;
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateLatestPubKey {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string publicKey   = 2;
  repeated string commitments = 3;
  uint64 numberOfValidators = 4;
  repeated EncryptedKeyShare encryptedKeyShares = 5;
}

message MsgCreateLatestPubKeyResponse {}

message MsgOverrideLatestPubKey {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string publicKey   = 2;
  repeated string commitments = 3;
  uint64 numberOfValidators = 4;
  repeated EncryptedKeyShare encryptedKeyShares = 5;
}

message MsgOverrideLatestPubKeyResponse {}

message MsgCreateAuthorizedAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string target  = 1;
  string creator = 2;
}

message MsgCreateAuthorizedAddressResponse {}

message MsgUpdateAuthorizedAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string target       = 1;
  bool   isAuthorized = 2;
  string creator      = 3;
}

message MsgUpdateAuthorizedAddressResponse {}

message MsgDeleteAuthorizedAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string target  = 1;
  string creator = 2;
}

message MsgDeleteAuthorizedAddressResponse {}

message MsgCreateGeneralKeyShare {
  option (cosmos.msg.v1.signer) = "creator";
  string creator             = 1;
  string idType              = 2;
  string idValue             = 3;
  string keyShare            = 4;
  uint64 keyShareIndex       = 5;
  uint64 receivedTimestamp   = 6;
  uint64 receivedBlockHeight = 7;
}

message MsgCreateGeneralKeyShareResponse {
  string creator             = 1;
  string idType              = 2;
  string idValue             = 3;
  string keyShare            = 4;
  uint64 keyShareIndex       = 5;
  uint64 receivedBlockHeight = 6;
  bool   success             = 7;
  string errorMessage        = 8;
}
