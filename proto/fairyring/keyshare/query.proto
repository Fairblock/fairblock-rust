syntax = "proto3";

package fairyring.keyshare;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "fairyring/keyshare/params.proto";
import "fairyring/keyshare/validator_set.proto";
import "fairyring/keyshare/key_share.proto";
import "fairyring/keyshare/aggregated_key_share.proto";
import "fairyring/keyshare/pub_key.proto";
import "fairyring/keyshare/authorized_address.proto";
import "fairyring/keyshare/commitments.proto";

option go_package = "github.com/Fairblock/fairyring/x/keyshare/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/fairyring/keyshare/params";
  
  }

  // Commitments queries the lists of active and queued commitments
  rpc Commitments (QueryCommitmentsRequest) returns (QueryCommitmentsResponse) {
    option (google.api.http).get = "/fairyring/keyshare/commitments";
  }

  // Queries a ValidatorSet by index.
  rpc ValidatorSet (QueryValidatorSetRequest) returns (QueryValidatorSetResponse) {
    option (google.api.http).get = "/fairyring/keyshare/validator_set/{index}";

  }

  // Queries a list of ValidatorSet items.
  rpc ValidatorSetAll (QueryValidatorSetAllRequest) returns (QueryValidatorSetAllResponse) {
    option (google.api.http).get = "/fairyring/keyshare/validator_set";

  }

  // Queries a KeyShare by index.
  rpc KeyShare (QueryKeyShareRequest) returns (QueryKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/key_share/{validator}/{block_height}";

  }

  // Queries a list of KeyShare items.
  rpc KeyShareAll (QueryKeyShareAllRequest) returns (QueryKeyShareAllResponse) {
    option (google.api.http).get = "/fairyring/keyshare/key_share";

  }

  // this line is used by starport scaffolding # 2

  // AggregatedKeyShare a AggregatedKeyShare item by height.
  rpc AggregatedKeyShare (QueryAggregatedKeyShareRequest) returns (QueryAggregatedKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/aggregated_key_share/{height}";

  }

  // AggregatedKeyShareAll Queries a list of AggregatedKeyShare items.
  rpc AggregatedKeyShareAll (QueryAggregatedKeyShareAllRequest) returns (QueryAggregatedKeyShareAllResponse) {
    option (google.api.http).get = "/fairyring/keyshare/aggregated_key_share";

  }

  // Queries the public keys
  rpc PubKey (QueryPubKeyRequest) returns (QueryPubKeyResponse) {
    option (google.api.http).get = "/fairyring/keyshare/pub_key";

  }

  // Queries a AuthorizedAddress item by target.
  rpc AuthorizedAddress    (QueryAuthorizedAddressRequest) returns (QueryAuthorizedAddressResponse) {
    option (google.api.http).get = "/fairyring/keyshare/authorized_address/{target}";

  }

  // Queries a list of AuthorizedAddress items
  rpc AuthorizedAddressAll (QueryAuthorizedAddressAllRequest) returns (QueryAuthorizedAddressAllResponse) {
    option (google.api.http).get = "/fairyring/keyshare/authorized_address";

  }

  // Queries a GeneralKeyShare item by validator address and identity.
  rpc GeneralKeyShare    (QueryGeneralKeyShareRequest) returns (QueryGeneralKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/general_key_share/{validator}/{id_type}/{id_value}";

  }

  // Queries a list of GeneralKeyShare items
  rpc GeneralKeyShareAll (QueryGeneralKeyShareAllRequest) returns (QueryGeneralKeyShareAllResponse) {
    option (google.api.http).get = "/fairyring/keyshare/general_key_share";

  }

  // Queries verifiable randomness
  rpc VerifiableRandomness (QueryVerifiableRandomnessRequest) returns (QueryVerifiableRandomnessResponse) {
    option (google.api.http).get = "/fairyring/keyshare/verifiable_randomness";
  }
}

// QueryVerifiableRandomnessRequest is the request type for 
// the Query/VerifiableRandomness  method
message QueryVerifiableRandomnessRequest {}

// QueryVerifiableRandomnessResponse is the response type for 
// the Query/VerifiableRandomness  method
message QueryVerifiableRandomnessResponse {
  string randomness = 1;
  uint64 round = 2;
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// QueryCommitmentsRequest is request type for the Query/Commitments RPC method.
message QueryCommitmentsRequest {}

// QueryCommitmentsResponse is response type for the Query/Commitments RPC method
message QueryCommitmentsResponse {
  Commitments active_commitments = 1;
  Commitments queued_commitments = 2;
}

// QueryValidatorSetRequest is request type for the Query/ValidatorSet RPC method.
message QueryValidatorSetRequest {
  string index = 1;
}

// QueryValidatorSetResponse is response type for the Query/ValidatorSet RPC method.
message QueryValidatorSetResponse {
  ValidatorSet validator_set = 1 [(gogoproto.nullable) = false];
}

// QueryValidatorSetAllRequest is request type for the Query/ValidatorSetAll RPC method.
message QueryValidatorSetAllRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryValidatorSetAllResponse is response type for the Query/ValidatorSetAll RPC method.
message QueryValidatorSetAllResponse {
  repeated ValidatorSet validator_set = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

// QueryKeyShareRequest is request type for the Query/KeyShare RPC method.
message QueryKeyShareRequest {
  string validator   = 1;
  uint64 block_height = 2;
}

// QueryKeyShareResponse is response type for the Query/KeyShare RPC method.
message QueryKeyShareResponse {
  KeyShare key_share = 1 [(gogoproto.nullable) = false];
}

// QueryKeyShareAllRequest is request type for the Query/KeyShareAll RPC method.
message QueryKeyShareAllRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryKeyShareAllResponse is response type for the Query/KeyShareAll RPC method.
message QueryKeyShareAllResponse {
  repeated KeyShare key_share   = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryAggregatedKeyShareRequest is request type for the Query/AggregatedKeyShare RPC method.
message QueryAggregatedKeyShareRequest {
  uint64 height = 1;
}

// QueryAggregatedKeyShareResponse is response type for the Query/AggregatedKeyShare RPC method.
message QueryAggregatedKeyShareResponse {
  AggregatedKeyShare aggregated_key_share = 1 [(gogoproto.nullable) = false];
}

// QueryAggregatedKeyShareAllRequest is request type for the Query/AggregatedKeyShareAll RPC method.
message QueryAggregatedKeyShareAllRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAggregatedKeyShareAllResponse is response type for the Query/AggregatedKeyShareAll RPC method.
message QueryAggregatedKeyShareAllResponse {
  repeated AggregatedKeyShare aggregated_key_share = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryPubKeyRequest is request type for the Query/PubKey RPC method.
message QueryPubKeyRequest {}

// QueryPubKeyResponse is response type for the Query/PubKey RPC method.
message QueryPubKeyResponse {
  ActivePubKey active_pub_key = 1 [(gogoproto.nullable) = false];
  QueuedPubKey queued_pub_key = 2 [(gogoproto.nullable) = false];
}

// QueryAuthorizedAddressRequest is request type for the Query/AuthorizedAddress RPC method.
message QueryAuthorizedAddressRequest {
  string target = 1;
}

// QueryAuthorizedAddressResponse is response type for the Query/AuthorizedAddress RPC method.
message QueryAuthorizedAddressResponse {
  AuthorizedAddress authorized_address = 1 [(gogoproto.nullable) = false];
}

// QueryAuthorizedAddressAllRequest is request type for the Query/AuthorizedAddressAll RPC method.
message QueryAuthorizedAddressAllRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAuthorizedAddressAllResponse is response type for the Query/AuthorizedAddressAll RPC method.
message QueryAuthorizedAddressAllResponse {
  repeated AuthorizedAddress authorized_address = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination        = 2;
}

// QueryGeneralKeyShareRequest is request type for the Query/GeneralKeyShare RPC method.
message QueryGeneralKeyShareRequest {
  string validator = 1;
  string id_type    = 2;
  string id_value   = 3;
}

// QueryGeneralKeyShareResponse is response type for the Query/GeneralKeyShare RPC method.
message QueryGeneralKeyShareResponse {
  GeneralKeyShare general_key_share = 1 [(gogoproto.nullable) = false];
}

// QueryGeneralKeyShareAllRequest is request type for the Query/GeneralKeyShareAll RPC method.
message QueryGeneralKeyShareAllRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryGeneralKeyShareAllResponse is response type for the Query/GeneralKeyShareAll RPC method.
message QueryGeneralKeyShareAllResponse {
  repeated GeneralKeyShare general_key_share = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination      = 2;
}

